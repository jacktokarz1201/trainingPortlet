/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.ms3.training.services.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import com.ms3.training.services.model.courses;
import com.ms3.training.services.service.coursesService;
import com.ms3.training.services.service.persistence.course_assignmentPersistence;
import com.ms3.training.services.service.persistence.coursesPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the courses remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.ms3.training.services.service.impl.coursesServiceImpl}.
 * </p>
 *
 * @author John
 * @see com.ms3.training.services.service.impl.coursesServiceImpl
 * @see com.ms3.training.services.service.coursesServiceUtil
 * @generated
 */
public abstract class coursesServiceBaseImpl extends BaseServiceImpl
	implements coursesService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.ms3.training.services.service.coursesServiceUtil} to access the courses remote service.
	 */

	/**
	 * Returns the course_assignment local service.
	 *
	 * @return the course_assignment local service
	 */
	public com.ms3.training.services.service.course_assignmentLocalService getcourse_assignmentLocalService() {
		return course_assignmentLocalService;
	}

	/**
	 * Sets the course_assignment local service.
	 *
	 * @param course_assignmentLocalService the course_assignment local service
	 */
	public void setcourse_assignmentLocalService(
		com.ms3.training.services.service.course_assignmentLocalService course_assignmentLocalService) {
		this.course_assignmentLocalService = course_assignmentLocalService;
	}

	/**
	 * Returns the course_assignment remote service.
	 *
	 * @return the course_assignment remote service
	 */
	public com.ms3.training.services.service.course_assignmentService getcourse_assignmentService() {
		return course_assignmentService;
	}

	/**
	 * Sets the course_assignment remote service.
	 *
	 * @param course_assignmentService the course_assignment remote service
	 */
	public void setcourse_assignmentService(
		com.ms3.training.services.service.course_assignmentService course_assignmentService) {
		this.course_assignmentService = course_assignmentService;
	}

	/**
	 * Returns the course_assignment persistence.
	 *
	 * @return the course_assignment persistence
	 */
	public course_assignmentPersistence getcourse_assignmentPersistence() {
		return course_assignmentPersistence;
	}

	/**
	 * Sets the course_assignment persistence.
	 *
	 * @param course_assignmentPersistence the course_assignment persistence
	 */
	public void setcourse_assignmentPersistence(
		course_assignmentPersistence course_assignmentPersistence) {
		this.course_assignmentPersistence = course_assignmentPersistence;
	}

	/**
	 * Returns the courses local service.
	 *
	 * @return the courses local service
	 */
	public com.ms3.training.services.service.coursesLocalService getcoursesLocalService() {
		return coursesLocalService;
	}

	/**
	 * Sets the courses local service.
	 *
	 * @param coursesLocalService the courses local service
	 */
	public void setcoursesLocalService(
		com.ms3.training.services.service.coursesLocalService coursesLocalService) {
		this.coursesLocalService = coursesLocalService;
	}

	/**
	 * Returns the courses remote service.
	 *
	 * @return the courses remote service
	 */
	public com.ms3.training.services.service.coursesService getcoursesService() {
		return coursesService;
	}

	/**
	 * Sets the courses remote service.
	 *
	 * @param coursesService the courses remote service
	 */
	public void setcoursesService(
		com.ms3.training.services.service.coursesService coursesService) {
		this.coursesService = coursesService;
	}

	/**
	 * Returns the courses persistence.
	 *
	 * @return the courses persistence
	 */
	public coursesPersistence getcoursesPersistence() {
		return coursesPersistence;
	}

	/**
	 * Sets the courses persistence.
	 *
	 * @param coursesPersistence the courses persistence
	 */
	public void setcoursesPersistence(coursesPersistence coursesPersistence) {
		this.coursesPersistence = coursesPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return courses.class;
	}

	protected String getModelClassName() {
		return courses.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = coursesPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.ms3.training.services.service.course_assignmentLocalService.class)
	protected com.ms3.training.services.service.course_assignmentLocalService course_assignmentLocalService;
	@BeanReference(type = com.ms3.training.services.service.course_assignmentService.class)
	protected com.ms3.training.services.service.course_assignmentService course_assignmentService;
	@BeanReference(type = course_assignmentPersistence.class)
	protected course_assignmentPersistence course_assignmentPersistence;
	@BeanReference(type = com.ms3.training.services.service.coursesLocalService.class)
	protected com.ms3.training.services.service.coursesLocalService coursesLocalService;
	@BeanReference(type = com.ms3.training.services.service.coursesService.class)
	protected com.ms3.training.services.service.coursesService coursesService;
	@BeanReference(type = coursesPersistence.class)
	protected coursesPersistence coursesPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private coursesServiceClpInvoker _clpInvoker = new coursesServiceClpInvoker();
}